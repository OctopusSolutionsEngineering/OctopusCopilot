import unittest
from domain.view.markdown.markdown_icons import (
    get_github_state_icon,
    get_state_icon,
    get_activity_log_state_icon,
)


class TestMarkdownIcons(unittest.TestCase):

    def test_get_github_state_icon(self):
        self.assertEqual(get_github_state_icon("in_progress", None), "ðŸ”µ")
        self.assertEqual(get_github_state_icon("queued", None), "ðŸŸ£")
        self.assertEqual(get_github_state_icon("completed", "success"), "ðŸ’š")
        self.assertEqual(get_github_state_icon("completed", "failure"), "ðŸ”´")
        self.assertEqual(get_github_state_icon("completed", "timed_out"), "ðŸ”´")
        self.assertEqual(get_github_state_icon("completed", "action_required"), "ðŸŸ ")
        self.assertEqual(get_github_state_icon("completed", "cancelled"), "âšª")
        self.assertEqual(get_github_state_icon("completed", "neutral"), "âšª")
        self.assertEqual(get_github_state_icon("completed", "skipped"), "âšª")
        self.assertEqual(get_github_state_icon("completed", None), "âšª")

    def test_get_state_icon(self):
        self.assertEqual(get_state_icon("Executing", False, False), "ðŸ”µ")
        self.assertEqual(get_state_icon("Success", False, False), "ðŸ’š")
        self.assertEqual(get_state_icon("Success", True, False), "ðŸ’›")
        self.assertEqual(get_state_icon("Failed", False, False), "ðŸ”´")
        self.assertEqual(get_state_icon("Canceled", False, False), "âšª")
        self.assertEqual(get_state_icon("TimedOut", False, False), "ðŸ”´")
        self.assertEqual(get_state_icon("Cancelling", False, False), "ðŸ”´")
        self.assertEqual(get_state_icon("Queued", False, False), "ðŸŸ£")
        self.assertEqual(get_state_icon("Queued", False, True), "ðŸŸ ")
        self.assertEqual(get_state_icon("Unknown", False, False), "âšª")

    def test_get_activity_log_state_icon(self):
        self.assertEqual(get_activity_log_state_icon("Running"), "ðŸ”µ")
        self.assertEqual(get_activity_log_state_icon("SuccessWithWarning"), "ðŸ’›")
        self.assertEqual(get_activity_log_state_icon("Success"), "ðŸ’š")
        self.assertEqual(get_activity_log_state_icon("Failed"), "ðŸ”´")
        self.assertEqual(get_activity_log_state_icon("Canceled"), "âšª")
        self.assertEqual(get_activity_log_state_icon("TimedOut"), "ðŸ”´")
        self.assertEqual(get_activity_log_state_icon("Cancelling"), "ðŸ”´")
        self.assertEqual(get_activity_log_state_icon("Queued"), "ðŸŸ£")
        self.assertEqual(get_activity_log_state_icon("Pending"), "âŒ›")
        self.assertEqual(get_activity_log_state_icon("Unknown"), "âšª")


if __name__ == "__main__":
    unittest.main()
