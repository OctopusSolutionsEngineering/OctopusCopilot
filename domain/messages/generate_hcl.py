import asyncio

from domain.b64.b64_encoder import decode_string_b64
from domain.context.octopus_context import max_chars_128
from infrastructure.github import get_repo_contents


def generate_hcl_messages(github_token, logging=None):
    messages = [
        (
            "system",
            "You are methodical agent who understands Terraform modules defining Octopus Deploy resources.",
        ),
        (
            "system",
            "The supplied HCL configuration files are examples of valid Terraform configuration files for the Octopus Terraform provider.",
        ),
    ]

    # You can get the sample HCL live from the OctopusTerraformExport repository
    # This is for internal use only, usually to refresh the system messages defined in the get_hardcoded_hcl_examples function
    # Don't use this in production.
    # messages += get_live_messages(github_token, logging)

    # These are the hard coded messages to remove the need to download the sample HCL
    messages += get_hardcoded_hcl_examples()

    messages += [("user", "Question: {input}"), ("user", "Answer:")]

    return messages


def get_live_messages(github_token, logging=None):
    """
    Generate sample HCL messages from the OctopusTerraformExport repository
    """
    messages = []

    tests = asyncio.run(
        get_repo_contents(
            "OctopusSolutionsEngineering",
            "OctopusTerraformExport",
            "test/terraform",
            github_token,
        )
    )

    sample_hcl = asyncio.run(get_all_file_content(tests, github_token, logging))

    # Don't go over the 128k context length limit
    chars = 0
    for hcl in sample_hcl:
        chars += len(hcl[1])
        if chars > max_chars_128:
            break
        messages.append(hcl)

    return messages


def get_hardcoded_hcl_examples():
    """
    Get the hard coded HCL examples which avoids the need to download the sample HCL from the OctopusTerraformExport
    """
    return [
        (
            "system",
            'HCL: ###\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_azure_service_principal" "account_azure" {{\n  description                       = "Azure Account"\n  name                              = "Azure"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  tenants                           = [octopusdeploy_tenant.tenant_team_a.id]\n  tenanted_deployment_participation = "Tenanted"\n  application_id                    = "2eb8bd13-661e-489c-beb9-4103efb9dbdd"\n  password                          = "secretgoeshere"\n  subscription_id                   = "95bf77d2-64b1-4ed2-9de1-b5451e3881f5"\n  tenant_id                         = "18eb006b-c3c8-4a72-93cd-fe4b293f82ee"\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "blah_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Blah"\n  use_guided_failure           = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_username_password_account" "account_gke" {{\n  description                       = "A test account"\n  name                              = "GKE"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  username                          = "admin"\n  password                          = "secretgoeshere"\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_gcp_account" "account_google" {{\n  description                       = "A test account"\n  name                              = "Google"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  json_key                          = "secretgoeshere"\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_ssh_key_account" "account_ssh" {{\n  description                       = "A test account"\n  name                              = "SSH"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "unused"\n  username                          = "admin"\n  # Because of https://github.com/OctopusDeployLabs/terraform-provider-octopusdeploy/issues/343\n  private_key_passphrase            = file("dummycert.txt")\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  storage_endpoint_suffix           = "storage_endpoint_suffix"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "management_endpoint"\n  certificate                       = file("dummycert.txt")\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  token                             = "secretgoeshere"\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_helm_feed" "feed_helm" {{\n  name                                 = "Helm"\n  password                             = "password"\n  feed_uri                             = "https://charts.helm.sh/stable/"\n  username                             = "username"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_aws_elastic_container_registry" "feed_ecr" {{\n  name                                 = "ECR"\n  access_key                           = var.feed_ecr_access_key\n  secret_key                           = var.feed_ecr_secret_key\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n  region                               = "us-east-1"\n}}\nvariable "feed_ecr_access_key" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The access key used for the ECR feed"\n}}\nvariable "feed_ecr_secret_key" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret key used for the ECR feed"\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_maven_feed" "feed_maven" {{\n  name                                 = "Maven"\n  feed_uri                             = "https://repo.maven.apache.org/maven2/"\n  username                             = "username"\n  password                             = "password"\n  package_acquisition_location_options = ["Server", "ExecutionTarget"]\n  download_attempts                    = 5\n  download_retry_backoff_seconds       = 10\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_nuget_feed" "feed_nuget" {{\n  name                                 = "Nuget"\n  feed_uri                             = "https://index.docker.io"\n  username                             = "username"\n  password                             = "password"\n  is_enhanced_mode                     = true\n  package_acquisition_location_options = ["Server", "ExecutionTarget"]\n  download_attempts                    = 5\n  download_retry_backoff_seconds       = 10\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n\n  jira_extension_settings {{\n    environment_type = "unmapped"\n  }}\n\n  jira_service_management_extension_settings {{\n    is_enabled = true\n  }}\n\n  servicenow_extension_settings {{\n    is_enabled = true\n  }}\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle" {{\n  description = "A test lifecycle"\n  name        = "Simple"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set" {{\n  name = "Test"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_variable" "octopus_admin_api_key" {{\n  name = "Test.Variable"\n  type = "String"\n  description = "Test variable"\n  is_sensitive = false\n  is_editable = true\n  owner_id = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  value = "True"\n\n  prompt {{\n    description = "test description"\n    label       = "test label"\n    is_required = true\n    display_settings {{\n      control_type = "Select"\n      select_option {{\n        display_name = "hi"\n        value = "there"\n      }}\n    }}\n  }}\n}}\n\nresource "octopusdeploy_variable" "secret" {{\n  name = "Test.SecretVariable"\n  type = "Sensitive"\n  description = "Test variable"\n  is_sensitive = true\n  is_editable = true\n  owner_id = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  sensitive_value = "True"\n}}\n\nresource "octopusdeploy_variable" "tag_scoped" {{\n  depends_on = [octopusdeploy_tag.tag_a]\n\n  name         = "Test.TagScopedVariable"\n  type         = "String"\n  description  = "Test variable"\n  is_sensitive = false\n  is_editable  = true\n  owner_id     = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  value        = "True"\n\n  scope {{\n    tenant_tags = ["tag1/a"]\n  }}\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set2" {{\n  name = "Test2"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set3" {{\n  name = "Test3"\n  description = "Test variable set"\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.deploy_frontend_project.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = octopusdeploy_docker_container_registry.feed_docker.id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_channel" "backend_mainline" {{\n  name        = "Test"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  description = "Test channel"\n  depends_on  = [octopusdeploy_project.deploy_frontend_project, octopusdeploy_deployment_process.deploy_backend]\n  is_default  = true\n  rule {{\n    tag = "^$"\n    action_package {{\n      deployment_action = "Test"\n      package_reference = "test"\n    }}\n  }}\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AwsRunCloudFormation"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{ "Octopus.Action.Aws.AssumeRole" = "False", "Octopus.Action.Aws.CloudFormation.Tags" = "[{{\\"key\\":\\"Environment\\",\\"value\\":\\"#{{Octopus.Environment.Name | Replace \\\\\\" .*\\\\\\" \\\\\\"\\\\\\"}}\\"}},{{\\"key\\":\\"DeploymentProject\\",\\"value\\":\\"API_Gateway\\"}}]", "Octopus.Action.Aws.CloudFormationStackName" = "OctopusBuilder-APIGateway-mcasperson-#{{Octopus.Environment.Name | Replace \\" .*\\" \\"\\" | ToLower}}", "Octopus.Action.Aws.CloudFormationTemplate" = "Resources:\\n  RestApi:\\n    Type: \'AWS::ApiGateway::RestApi\'\\n    Properties:\\n      Description: My API Gateway\\n      Name: Octopus Workflow Builder\\n      BinaryMediaTypes:\\n        - \'*/*\'\\n      EndpointConfiguration:\\n        Types:\\n          - REGIONAL\\n  Health:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: health\\n  Api:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: api\\n  Web:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId: !Ref RestApi\\n      ParentId: !GetAtt\\n        - RestApi\\n        - RootResourceId\\n      PathPart: \'{{proxy+}}\'\\nOutputs:\\n  RestApi:\\n    Description: The REST API\\n    Value: !Ref RestApi\\n  RootResourceId:\\n    Description: ID of the resource exposing the root resource id\\n    Value:\\n      \'Fn::GetAtt\':\\n        - RestApi\\n        - RootResourceId\\n  Health:\\n    Description: ID of the resource exposing the health endpoints\\n    Value: !Ref Health\\n  Api:\\n    Description: ID of the resource exposing the api endpoint\\n    Value: !Ref Api\\n  Web:\\n    Description: ID of the resource exposing the web app frontend\\n    Value: !Ref Web\\n", "Octopus.Action.Aws.CloudFormationTemplateParameters" = "[]", "Octopus.Action.Aws.CloudFormationTemplateParametersRaw" = "[]", "Octopus.Action.Aws.Region" = "ap-southeast-2", "Octopus.Action.Aws.TemplateSource" = "Inline", "Octopus.Action.Aws.WaitForCompletion" = "True", "Octopus.Action.AwsAccount.UseInstanceRole" = "False", "Octopus.Action.AwsAccount.Variable" = "AWS Account" }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n      package {{\n        name                      = "test"\n        package_id                = "test"\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        acquisition_location      = "Server"\n        extract_during_deployment = true\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_git_credential" "gitcredential_test" {{\n  description = "test git credential"\n  name        = "test"\n  type        = "UsernamePassword"\n  username    = "admin"\n  password    = "${{var.gitcredential_test}}"\n}}\nvariable "gitcredential_test" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret variable value associated with the git credential test"\n  default     = "Password01!"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\nresource "octopusdeploy_script_module" "library_variable_set_test2" {{\n  description = "Test script module"\n  name        = "Test2"\n\n  script {{\n    body   = "echo \\"hi\\""\n    syntax = "PowerShell"\n  }}\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "type"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_excluded" {{\n  name        = "excluded"\n  color       = "#333333"\n  description = "excluded"\n  sort_order  = 4\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_ignore" {{\n  name        = "ignorethis"\n  color       = "#333333"\n  description = "ignore this"\n  sort_order  = 5\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["type/a", "type/b", "type/ignorethis"]\n  depends_on  = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b, octopusdeploy_tag.tag_ignore]\n}}\n\nresource "octopusdeploy_tenant_project" "team_a_frontend"{{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_excluded" {{\n  name        = "Excluded"\n  description = "Excluded tenant"\n  tenant_tags = ["type/excluded"]\n  depends_on  = [octopusdeploy_tag.tag_excluded]\n\n}}\n\nresource "octopusdeploy_tenant_project" "excluded_frontend" {{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_excluded.id\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_certificate" "tenanted" {{\n  name                              = "Tenanted"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Tenanted"\n  tenants                           = [octopusdeploy_tenant.tenant_team_a.id]\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n\n\n}}\n\nresource "octopusdeploy_tenant_project" "tenant_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_a.id\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_library_variable_set" "library_variable_set_octopus_variables" {{\n  name        = "Octopus Variables"\n\n  template {{\n    name             = "template"\n    label            = "a"\n    help_text        = "a"\n    default_value    = "a"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n\n  template {{\n    name             = "Drop Down"\n    label            = "Label"\n    help_text        = "Help Text"\n    default_value    = "Value1"\n    display_settings = {{ "Octopus.ControlType" = "Select", "Octopus.SelectOptions" = "Value1|Display text 1\\nValue2|Display text 2" }}\n  }}\n\n  template {{\n    name             = "Check Box"\n    label            = "Check Box"\n    help_text        = "Help Text"\n    default_value    = "Default"\n    display_settings = {{ "Octopus.ControlType" = "Checkbox" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_library_variable_set.library_variable_set_octopus_variables.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  template {{\n    name             = "Project Template Variable"\n    label            = "Test"\n    default_value    = "Test"\n    help_text = "help text goes here"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n}}\n\nresource "octopusdeploy_tenant_project" "tenant_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant_project_variable" "tenantprojectvariable6_team_a" {{\n  environment_id = octopusdeploy_environment.development_environment.id\n  project_id     = octopusdeploy_project.deploy_frontend_project.id\n  template_id    = octopusdeploy_project.deploy_frontend_project.template[0].id\n  tenant_id      = octopusdeploy_tenant.tenant_team_a.id\n  value          = "my value"\n  depends_on = [octopusdeploy_tenant_project.tenant_project]\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_team_a" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_octopus_variables.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_octopus_variables.template[0].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "my value"\n  depends_on = [octopusdeploy_tenant_project.tenant_project]\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 1000000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test" {{\n  name             = "test"\n  project_id       = "${{octopusdeploy_project.deploy_frontend_project.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks {{\n  cluster_url                       = "https://cluster"\n  environments                      = ["${{octopusdeploy_environment.test_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n  default_worker_pool_id            = octopusdeploy_static_worker_pool.workerpool_docker.id\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  aws_account_authentication {{\n    account_id        = "${{octopusdeploy_aws_account.account_aws_account.id}}"\n    cluster_name      = "clustername"\n    assume_role       = false\n    use_instance_role = false\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_ssh_key_account" "account_ec2_sydney" {{\n  name                              = "ec2 sydney"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "${{var.account_ec2_sydney_cert}}"\n  username                          = "ec2-user"\n  private_key_passphrase            = "${{var.account_ec2_sydney}}"\n}}\nvariable "account_ec2_sydney" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The password associated with the certificate for account ec2 sydney"\n}}\nvariable "account_ec2_sydney_cert" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The certificate file for account ec2 sydney"\n}}\n\nresource "octopusdeploy_ssh_connection_deployment_target" "target_3_25_215_87" {{\n  account_id            = "${{octopusdeploy_ssh_key_account.account_ec2_sydney.id}}"\n  environments          = ["${{octopusdeploy_environment.development_environment.id}}"]\n  fingerprint           = "d5:6b:a3:78:fa:fe:f5:ad:d4:79:4a:57:35:6a:32:ef"\n  host                  = "3.25.215.87"\n  name                  = "Test"\n  roles                 = ["vm"]\n  dot_net_core_platform = "linux-x64"\n  machine_policy_id     = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_listening_tentacle_deployment_target" "target_vm_listening_ngrok" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["vm"]\n  tentacle_url                      = "https://tentacle/"\n  thumbprint                        = "55E05FD1B0F76E60F6DA103988056CE695685FD1"\n  is_disabled                       = false\n  is_in_process                     = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_polling_tentacle_deployment_target" "target_desktop_3e4k4r8" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["vm"]\n  tentacle_url                      = "poll://abcdefghijklmnopqrst/"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "PowerShell"\n  shell_version                     = "5.1.22621.1"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n\n  thumbprint = "1854A302E5D9EAC1CAA3DA1F5249F82C28BB2B86"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_cloud_region_deployment_target" "target_region1" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["cloud"]\n  default_worker_pool_id            = ""\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_offline_package_drop_deployment_target" "target_offline" {{\n  applications_directory            = "c:\\\\temp"\n  working_directory                 = "c:\\\\temp"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["offline"]\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  storage_endpoint_suffix           = "storage_endpoint_suffix"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "management_endpoint"\n  certificate                       = file("dummycert.txt")\n}}\n\nresource "octopusdeploy_azure_cloud_service_deployment_target" "target_azure" {{\n  environments                      = [octopusdeploy_environment.development_environment.id]\n  name                              = "Azure"\n  roles                             = ["cloud"]\n  account_id                        = octopusdeploy_azure_subscription_account.account_subscription.id\n  cloud_service_name                = "servicename"\n  storage_account_name              = "accountname"\n  default_worker_pool_id            = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  use_current_instance_count        = true\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\nresource "octopusdeploy_azure_service_fabric_cluster_deployment_target" "target_service_fabric" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Service Fabric"\n  roles                             = ["cloud"]\n  connection_endpoint               = "http://endpoint"\n  aad_client_credential_secret      = ""\n  aad_credential_type               = "UserCredential"\n  aad_user_credential_password      = "${{var.target_service_fabric}}"\n  aad_user_credential_username      = "username"\n  certificate_store_location        = ""\n  certificate_store_name            = ""\n  client_certificate_variable       = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\nvariable "target_service_fabric" {{\n  type        = string\n  nullable    = true\n  sensitive   = true\n  description = "The secret variable value associated with the target \\"Service Fabric\\""\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\nresource "octopusdeploy_azure_web_app_deployment_target" "target_web_app" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Web App"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_service_principal.account_sales_account.id}}"\n  resource_group_name               = "mattc-webapp"\n  web_app_name                      = "mattc-webapp"\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  web_app_slot_name                 = "slot1"\n# This doesn\'t work for setting the worker pool\n#  endpoint {{\n#    communication_style    = "AzureWebApp"\n#    default_worker_pool_id = octopusdeploy_static_worker_pool.workerpool_docker.id\n#  }}\n\n}}\nresource "octopusdeploy_azure_service_principal" "account_sales_account" {{\n  name                              = "Sales Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "08a4a027-6f2a-4793-a0e5-e59a3c79189f"\n  password                          = "${{var.account_sales_account}}"\n  subscription_id                   = "3b50dcf4-f74d-442e-93cb-301b13e1e2d5"\n  tenant_id                         = "3d13e379-e666-469e-ac38-ec6fd61c1166"\n}}\nvariable "account_sales_account" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The Azure secret associated with the account Sales Account"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_channel" "channel1" {{\n  name        = "Test 1"\n  project_id  = octopusdeploy_project.project_1.id\n  description = "Test channel"\n  is_default  = true\n  lifecycle_id = octopusdeploy_lifecycle.simple_lifecycle.id\n}}\n\nresource "octopusdeploy_channel" "channel2" {{\n  name        = "Test 2"\n  project_id  = octopusdeploy_project.project_2.id\n  description = "Test channel"\n  is_default  = true\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "blah_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Blah"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_git_credential" "gitcredential_matt" {{\n  name     = "matt"\n  type     = "UsernamePassword"\n  username = "mcasperson"\n  password = "${{var.gitcredential_matt}}"\n}}\n\nvariable "gitcredential_matt" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret variable value associated with the git credential \\"matt\\""\n}}\n\nresource "octopusdeploy_helm_feed" "feed_helm" {{\n  name                                 = "Helm"\n  password                             = "password"\n  feed_uri                             = "https://charts.helm.sh/stable/"\n  username                             = "username"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle" {{\n  description = "A test lifecycle"\n  name        = "Simple"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle2" {{\n  description = "A test lifecycle"\n  name        = "Simple2"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = true\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_library_variable_set.octopus_library_variable_set.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  git_library_persistence_settings {{\n    git_credential_id  = "${{octopusdeploy_git_credential.gitcredential_matt.id}}"\n    url                = "https://github.com/mcasperson/octogittest.git"\n    base_path          = ".octopus/integrationtest"\n    default_branch     = "main"\n    protected_branches = ["test"]\n  }}\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\nresource "octopusdeploy_variable" "string_variable2" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Test2"\n  value     = "PlainText"\n  scope {{\n    environments = [octopusdeploy_environment.development_environment.id]\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "tenantscoped"\n  value    = "test"\n  scope {{\n    tenant_tags = ["tag1/a"]\n  }}\n}}\n\nresource "octopusdeploy_variable" "string_variable3" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Test3"\n  value     = "PlainText"\n  scope {{\n    environments = [octopusdeploy_environment.test_environment.id]\n  }}\n}}\n\nresource "octopusdeploy_variable" "string_variable4" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "HelmFeed"\n  value     = octopusdeploy_helm_feed.feed_helm.id\n}}\n\nresource "octopusdeploy_variable" "string_variable5" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "UsernamePassword"\n  value     = octopusdeploy_username_password_account.account_gke.id\n}}\n\nresource "octopusdeploy_variable" "string_variable6" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "WorkerPool"\n  value     = octopusdeploy_static_worker_pool.workerpool_docker.id\n}}\n\nresource "octopusdeploy_variable" "string_variable7" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "Certificate"\n  value     = octopusdeploy_certificate.certificate_kind_ca.id\n}}\n\nresource "octopusdeploy_variable" "string_variable8" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "String"\n  name      = "TestNull"\n  value     = null\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deployment_process_hello_world" {{\n  project_id = "${{octopusdeploy_project.project_2.id}}"\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using Bash)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using Bash)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = octopusdeploy_static_worker_pool.workerpool_docker.id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody" = "echo \'Hello world, using Bash\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\necho \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax" = "Bash"\n        "Octopus.Action.RunOnServer" = "true"\n      }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n  depends_on = []\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test1" {{\n  name             = "Test 1"\n  project_id       = "${{octopusdeploy_project.project_1.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test2" {{\n  name             = "Test 2"\n  project_id       = "${{octopusdeploy_project.project_2.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag_set" "tagset_tag2" {{\n  name        = "tag2"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_c" {{\n  name        = "c"\n  color       = "#333333"\n  description = "tag c"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\nresource "octopusdeploy_tag" "tag_d" {{\n  name        = "d"\n  color       = "#333333"\n  description = "tag d"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenant_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.project_1.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_b" {{\n  name        = "Team B"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantb_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.project_2.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_b.id\n}}\n\nresource "octopusdeploy_username_password_account" "account_gke" {{\n  description                       = "A test account"\n  name                              = "GKE"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  username                          = "admin"\n  password                          = "secretgoeshere"\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set" {{\n  name = "Test"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_library_variable_set" "octopus_library_variable_set2" {{\n  name = "Test2"\n  description = "Test variable set"\n}}\n\nresource "octopusdeploy_variable" "octopus_admin_api_key" {{\n  name = "Test.Variable"\n  type = "String"\n  description = "Test variable"\n  is_sensitive = false\n  is_editable = true\n  owner_id = octopusdeploy_library_variable_set.octopus_library_variable_set.id\n  value = "test"\n}}\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = false\n  sort_order  = 3\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = true\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  git_username_password_persistence_settings {{\n    url                = "https://github.com/mcasperson/octogittest.git"\n    username           = "mcasperson"\n    password           = "${{var.project_git_password}}"\n    base_path          = ".octopus/projectest"\n    default_branch     = "main"\n    protected_branches = []\n  }}\n}}\n\nvariable "project_git_password" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The git password for the project"\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_channel" "backend_mainline" {{\n  name        = "Test"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  description = "Test channel"\n  depends_on  = [octopusdeploy_project.deploy_frontend_project, octopusdeploy_deployment_process.deploy_backend]\n  is_default  = true\n  rule {{\n    tag = "^$"\n    action_package {{\n      deployment_action = "Test"\n      package_reference = "test"\n    }}\n  }}\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AwsRunCloudFormation"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{ "Octopus.Action.Aws.AssumeRole" = "False", "Octopus.Action.Aws.CloudFormation.Tags" = "[{{\\"key\\":\\"Environment\\",\\"value\\":\\"#{{Octopus.Environment.Name | Replace \\\\\\" .*\\\\\\" \\\\\\"\\\\\\"}}\\"}},{{\\"key\\":\\"DeploymentProject\\",\\"value\\":\\"API_Gateway\\"}}]", "Octopus.Action.Aws.CloudFormationStackName" = "OctopusBuilder-APIGateway-mcasperson-#{{Octopus.Environment.Name | Replace \\" .*\\" \\"\\" | ToLower}}", "Octopus.Action.Aws.CloudFormationTemplate" = "Resources:\\n  RestApi:\\n    Type: \'AWS::ApiGateway::RestApi\'\\n    Properties:\\n      Description: $${{CFproperty}}\\n      Name: Octopus Workflow Builder\\n      BinaryMediaTypes:\\n        - \'*/*\'\\n      EndpointConfiguration:\\n        Types:\\n          - REGIONAL\\n  Health:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: health\\n  Api:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: api\\n  Web:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId: !Ref RestApi\\n      ParentId: !GetAtt\\n        - RestApi\\n        - RootResourceId\\n      PathPart: \'{{proxy+}}\'\\nOutputs:\\n  RestApi:\\n    Description: The REST API\\n    Value: !Ref RestApi\\n  RootResourceId:\\n    Description: ID of the resource exposing the root resource id\\n    Value:\\n      \'Fn::GetAtt\':\\n        - RestApi\\n        - RootResourceId\\n  Health:\\n    Description: ID of the resource exposing the health endpoints\\n    Value: !Ref Health\\n  Api:\\n    Description: ID of the resource exposing the api endpoint\\n    Value: !Ref Api\\n  Web:\\n    Description: ID of the resource exposing the web app frontend\\n    Value: !Ref Web\\n", "Octopus.Action.Aws.CloudFormationTemplateParameters" = "[]", "Octopus.Action.Aws.CloudFormationTemplateParametersRaw" = "[]", "Octopus.Action.Aws.Region" = "ap-southeast-2", "Octopus.Action.Aws.TemplateSource" = "Inline", "Octopus.Action.Aws.WaitForCompletion" = "True", "Octopus.Action.AwsAccount.UseInstanceRole" = "False", "Octopus.Action.AwsAccount.Variable" = "AWS Account" }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n      package {{\n        name                      = "test"\n        package_id                = "test"\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        acquisition_location      = "Server"\n        extract_during_deployment = true\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource"                    = "Inline"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Terraform.TemplateParameters"           = jsonencode({{}})\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.Template"                     = "#test"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_github_repository_feed" "example" {{\n  download_attempts              = 1\n  download_retry_backoff_seconds = 30\n  feed_uri                       = "https://api.github.com"\n  password                       = "test-password"\n  name                           = "Github"\n  username                       = "test-username"\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\ndata "octopusdeploy_accounts" "example" {{\n  account_type = "AmazonWebServicesAccount"\n  ids          = []\n  partial_name = "AWS Account"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_accounts" "azure" {{\n  account_type = "AzureServicePrincipal"\n  ids          = []\n  partial_name = "Azure"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_certificates" "example" {{\n  archived     = false\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle" {{\n  ids          = []\n  partial_name = "Simple"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_channel" "channel1" {{\n  name        = "Test 1"\n  project_id  = octopusdeploy_project.project_1.id\n  description = "Test channel"\n  is_default  = true\n  lifecycle_id = data.octopusdeploy_lifecycles.lifecycle.lifecycles[0].id\n}}\n\nresource "octopusdeploy_channel" "channel2" {{\n  name        = "Test 2"\n  project_id  = octopusdeploy_project.project_2.id\n  description = "Test channel"\n  is_default  = true\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_feeds" "docker_feed" {{\n  feed_type    = "Docker"\n  ids          = null\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "helm_feed" {{\n  feed_type    = "Helm"\n  ids          = null\n  partial_name = "Helm"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_projects" "other" {{\n  partial_name           = "Lookup project"\n  skip                   = 0\n  take                   = 1\n}}\n\ndata "octopusdeploy_feeds" "project_feed" {{\n  feed_type    = "OctopusProject"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_git_credentials" "git" {{\n  name = "matt"\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "variable" {{\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "variable2" {{\n  partial_name = "Test2"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "variable3" {{\n  partial_name = "Test3"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\n\ndata "octopusdeploy_worker_pools" "worker_pool_docker" {{\n  ids          = null\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = true\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = [\n    data.octopusdeploy_library_variable_sets.variable.library_variable_sets[0].id,\n    data.octopusdeploy_library_variable_sets.variable2.library_variable_sets[0].id,\n    data.octopusdeploy_library_variable_sets.variable3.library_variable_sets[0].id\n  ]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  git_library_persistence_settings {{\n    git_credential_id  = data.octopusdeploy_git_credentials.git.git_credentials[0].id\n    url                = "https://github.com/mcasperson/octogittest.git"\n    base_path          = ".octopus/integrationtest"\n    default_branch     = "main"\n    protected_branches = []\n  }}\n}}\n\nresource "octopusdeploy_variable" "excluded_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "Excluded"\n  value    = "PlainText"\n}}\n\nresource "octopusdeploy_variable" "named_excluded_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "NamedExcluded"\n  value    = "PlainText"\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "Test"\n  value    = "PlainText"\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_variable" "feed_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "HelmFeed"\n  value    = data.octopusdeploy_feeds.helm_feed.feeds[0].id\n}}\n\nresource "octopusdeploy_variable" "account_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "AwsAccount"\n  value    = data.octopusdeploy_accounts.example.accounts[0].id\n}}\n\nresource "octopusdeploy_variable" "gitcred_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "GitCreds"\n  value    = data.octopusdeploy_git_credentials.git.git_credentials[0].id\n}}\n\nresource "octopusdeploy_variable" "workerpool_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "WorkerPool"\n  value    = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n}}\n\nresource "octopusdeploy_variable" "certificate_variable" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "Certificate"\n  value    = data.octopusdeploy_certificates.example.certificates[0].id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deployment_process_hello_world" {{\n  project_id = "${{octopusdeploy_project.project_2.id}}"\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using Bash)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using Bash)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = "${{data.octopusdeploy_worker_pools.worker_pool_docker.worker_pools[0].id}}"\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody" = "echo \'Hello world, using Bash\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\necho \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax" = "Bash"\n        "Octopus.Action.RunOnServer" = "true"\n      }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n  depends_on = []\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.project_1.id\n  name               = "MyRunbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook" "runbook2" {{\n  project_id         = octopusdeploy_project.project_1.id\n  name               = "MyRunbook2"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook" "runbook3" {{\n  project_id         = octopusdeploy_project.project_1.id\n  name               = "MyRunbook3"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook3.id\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = "#{{HelmFeed}}"\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Run an Azure Script"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AzurePowerShell"\n      name                               = "Run an Azure Script"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n        "Octopus.Action.Azure.AccountId"     = data.octopusdeploy_accounts.azure.accounts[0].id\n        "Octopus.Action.Script.ScriptBody"   = "echo \\"hi\\""\n        "OctopusUseBundledTooling"           = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n      container {{\n        feed_id = data.octopusdeploy_feeds.docker_feed.feeds[0].id\n        image   = "octopusdeploy/worker-tools:6.0.0-ubuntu.22.04"\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Deploy a Release"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.DeployRelease"\n      name                               = "Deploy a Release"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.worker_pool_docker.worker_pools[0].id\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.DeployRelease.DeploymentCondition" = "Always"\n        "Octopus.Action.DeployRelease.ProjectId" = data.octopusdeploy_projects.other.projects[0].id\n      }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n\n      primary_package {{\n        package_id           = data.octopusdeploy_projects.other.projects[0].id\n        acquisition_location = "NotAcquired"\n        feed_id              = data.octopusdeploy_feeds.project_feed.feeds[0].id\n        properties           = {{}}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test1" {{\n  name             = "Test 1"\n  project_id       = "${{octopusdeploy_project.project_1.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nresource "octopusdeploy_project_deployment_target_trigger" "projecttrigger_test2" {{\n  name             = "Test 2"\n  project_id       = "${{octopusdeploy_project.project_2.id}}"\n  event_categories = []\n  environment_ids  = []\n  event_groups     = ["MachineAvailableForDeployment"]\n  roles            = []\n  should_redeploy  = false\n}}\n\nprovider "octopusdeploy" {{\n  address  = var.octopus_server\n  api_key  = var.octopus_apikey\n  space_id = var.octopus_space_id\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag_set" "tagset_tag2" {{\n  name        = "tag2"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_c" {{\n  name        = "c"\n  color       = "#333333"\n  description = "tag c"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\nresource "octopusdeploy_tag" "tag_d" {{\n  name        = "d"\n  color       = "#333333"\n  description = "tag d"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag2.id\n}}\n\ndata "octopusdeploy_environments" "test" {{\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n\n\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [data.octopusdeploy_environments.test.environments[0].id]\n  project_id   = octopusdeploy_project.project_1.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_b" {{\n  name        = "Team B"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantb_project" {{\n  environment_ids = [data.octopusdeploy_environments.test.environments[0].id]\n  project_id   = octopusdeploy_project.project_2.id\n  tenant_id    = octopusdeploy_tenant.tenant_team_b.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_c" {{\n  name        = "Team C"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantc_project" {{\n  environment_ids = [data.octopusdeploy_environments.test.environments[0].id]\n  project_id   = octopusdeploy_project.project_2.id\n  tenant_id = octopusdeploy_tenant.tenant_team_c.id\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.11.3" }}\n    // Use the option below when debugging\n    // octopusdeploy = {{ source = "octopus.com/com/octopusdeploy" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n  sort_order                   = 0\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n  sort_order                   = 1\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n  sort_order                   = 2\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.deploy_frontend_project.id\n  name               = "Runbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = [octopusdeploy_environment.development_environment.id]\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook.id\n\n\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = [octopusdeploy_environment.development_environment.id]\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = ["Octopus.Features.JsonConfigurationVariables"]\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_certificate" "test" {{\n  name                              = "Test"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n    // Use the option below when debugging\n    // octopusdeploy = {{ source = "octopus.com/com/octopusdeploy" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks{{\n  cluster_url                       = "https://cluster"\n  environments                      = ["${{octopusdeploy_environment.test_environment.id}}"]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n    cluster_certificate    = ""\n    cluster_url            = "https://cluster"\n    namespace              = ""\n    skip_tls_verification  = true\n    default_worker_pool_id = ""\n  }}\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  certificate_authentication {{\n    client_certificate = octopusdeploy_certificate.test.id\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_environments" "test" {{\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_accounts" "aws_account" {{\n  account_type = "AmazonWebServicesAccount"\n  ids          = []\n  partial_name = "AWS Account"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_accounts" "azure_account" {{\n  account_type = "AzureServicePrincipal"\n  ids          = []\n  partial_name = "Azure Account"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "amazon_web_services_account_variable" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "AmazonWebServicesAccount"\n  name      = "AWS"\n  value     = data.octopusdeploy_accounts.aws_account.accounts[0].id\n  scope {{\n    environments = [data.octopusdeploy_environments.test.environments[0].id]\n  }}\n}}\n\nresource "octopusdeploy_variable" "azure_account_variable" {{\n  owner_id  = octopusdeploy_project.project_1.id\n  type      = "AzureAccount"\n  name      = "Azure"\n  value     = data.octopusdeploy_accounts.azure_account.accounts[0].id\n  scope {{\n    environments = [data.octopusdeploy_environments.test.environments[0].id]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_kubernetes_cluster_deployment_targets" "test" {{\n  environments = []\n  ids          = []\n  partial_name = "Test"\n  name         = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "ssh" {{\n  partial_name = "Ssh"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "polling" {{\n  partial_name = "Polling"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "listening" {{\n  partial_name = "Listening"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "offline" {{\n  partial_name = "Offline"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "azure" {{\n  partial_name = "Azure"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "service_facbric" {{\n  partial_name = "ServiceFabric"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "webapp" {{\n  partial_name = "WebApp"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_deployment_targets" "cloud" {{\n  partial_name = "Cloud"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    machines = [\n      data.octopusdeploy_kubernetes_cluster_deployment_targets.test.kubernetes_cluster_deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.cloud.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.ssh.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.polling.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.listening.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.offline.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.azure.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.service_facbric.deployment_targets[0].id,\n      data.octopusdeploy_deployment_targets.webapp.deployment_targets[0].id,\n    ]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_certificates" "test" {{\n  archived     = false\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "cert_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "Certificate"\n  name     = "test"\n  value    = data.octopusdeploy_certificates.test.certificates[0].id\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "helm" {{\n  feed_type    = "Helm"\n  ids          = []\n  partial_name = "Helm"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "docker" {{\n  feed_type    = "Docker"\n  ids          = []\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "github" {{\n  feed_type    = "GitHub"\n  ids          = []\n  partial_name = "GitHub"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "maven" {{\n  feed_type    = "Maven"\n  ids          = []\n  partial_name = "Maven"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "nuget" {{\n  feed_type    = "NuGet"\n  ids          = []\n  partial_name = "NuGet"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.project_1.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.docker.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package2"\n        package_id                = "package2"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.helm.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package3"\n        package_id                = "package3"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.maven.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package4"\n        package_id                = "package4"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.nuget.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      package {{\n        name                      = "package5"\n        package_id                = "package5"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.github.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "blah_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Blah"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle" {{\n  description = "A test lifecycle"\n  name        = "Simple"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\nresource "octopusdeploy_lifecycle" "simple_lifecycle2" {{\n  description = "A test lifecycle"\n  name        = "Simple2"\n\n  release_retention_policy {{\n    quantity_to_keep    = 1\n\n    unit                = "Days"\n  }}\n\n  tentacle_retention_policy {{\n    quantity_to_keep    = 30\n\n    unit                = "Items"\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.development_environment.id]\n    name                         = octopusdeploy_environment.development_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.test_environment.id]\n    name                         = octopusdeploy_environment.test_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 1\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n\n  phase {{\n    automatic_deployment_targets = []\n    optional_deployment_targets  = [octopusdeploy_environment.production_environment.id]\n    name                         = octopusdeploy_environment.production_environment.name\n\n    release_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Days"\n    }}\n\n    tentacle_retention_policy {{\n      quantity_to_keep    = 30\n\n      unit                = "Items"\n    }}\n  }}\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks{{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = octopusdeploy_certificate.certificate_kind_ca.id\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = false\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n  }}\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  aws_account_authentication {{\n    account_id        = octopusdeploy_aws_account.account_aws_account.id\n    cluster_name      = "clustername"\n    assume_role       = false\n    use_instance_role = false\n  }}\n}}\n\nresource "octopusdeploy_cloud_region_deployment_target" "target_region1" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "CloudRegion"\n  roles                             = ["cloud"]\n  default_worker_pool_id            = ""\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nresource "octopusdeploy_ssh_key_account" "account_ec2_sydney" {{\n  name                              = "ec2 sydney"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "whatever"\n  username                          = "ec2-user"\n  private_key_passphrase            = "whatever"\n}}\n\nresource "octopusdeploy_ssh_connection_deployment_target" "ssh" {{\n  account_id            = octopusdeploy_ssh_key_account.account_ec2_sydney.id\n  environments          = [octopusdeploy_environment.development_environment.id]\n  fingerprint           = "d5:6b:a3:78:fa:fe:f5:ad:d4:79:4a:57:35:6a:32:ef"\n  host                  = "3.25.215.87"\n  name                  = "Ssh"\n  roles                 = ["vm"]\n  dot_net_core_platform = "linux-x64"\n  machine_policy_id     = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n}}\n\nresource "octopusdeploy_listening_tentacle_deployment_target" "listening" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Listening"\n  roles                             = ["vm"]\n  tentacle_url                      = "https://tentacle/"\n  thumbprint                        = "55E05FD1B0F76E60F6DA103988056CE695685FD1"\n  is_disabled                       = false\n  is_in_process                     = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n}}\n\nresource "octopusdeploy_polling_tentacle_deployment_target" "polling" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Polling"\n  roles                             = ["vm"]\n  tentacle_url                      = "poll://abcdefghijklmnopqrst/"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "PowerShell"\n  shell_version                     = "5.1.22621.1"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n\n  thumbprint = "1854A302E5D9EAC1CAA3DA1F5249F82C28BB2B86"\n}}\n\nresource "octopusdeploy_offline_package_drop_deployment_target" "target_offlineoffline" {{\n  applications_directory            = "c:\\\\temp"\n  working_directory                 = "c:\\\\temp"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Offline"\n  roles                             = ["offline"]\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  storage_endpoint_suffix           = "whatever"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "whatever"\n  certificate                       = file("dummycert2.txt")\n}}\n\nresource "octopusdeploy_azure_cloud_service_deployment_target" "azure" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Azure"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_subscription_account.account_subscription.id}}"\n  cloud_service_name                = "servicename"\n  storage_account_name              = "accountname"\n  default_worker_pool_id            = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  use_current_instance_count        = true\n}}\n\nresource "octopusdeploy_azure_service_fabric_cluster_deployment_target" "target_service_fabric" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "ServiceFabric"\n  roles                             = ["cloud"]\n  connection_endpoint               = "http://endpoint"\n  aad_client_credential_secret      = ""\n  aad_credential_type               = "UserCredential"\n  aad_user_credential_password      = "passwword"\n  aad_user_credential_username      = "username"\n  certificate_store_location        = ""\n  certificate_store_name            = ""\n  client_certificate_variable       = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nresource "octopusdeploy_azure_service_principal" "account_sales_account" {{\n  name                              = "Sales Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "08a4a027-6f2a-4793-a0e5-e59a3c79189f"\n  password                          = "Password"\n  subscription_id                   = "3b50dcf4-f74d-442e-93cb-301b13e1e2d5"\n  tenant_id                         = "3d13e379-e666-469e-ac38-ec6fd61c1166"\n}}\n\nresource "octopusdeploy_azure_web_app_deployment_target" "target_web_app" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "WebApp"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_service_principal.account_sales_account.id}}"\n  resource_group_name               = "mattc-webapp"\n  web_app_name                      = "mattc-webapp"\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  web_app_slot_name                 = "slot1"\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = octopusdeploy_lifecycle.simple_lifecycle.id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    machines = [\n      octopusdeploy_azure_cloud_service_deployment_target.azure.id,\n      octopusdeploy_azure_service_fabric_cluster_deployment_target.target_service_fabric.id,\n      octopusdeploy_azure_web_app_deployment_target.target_web_app.id,\n      octopusdeploy_cloud_region_deployment_target.target_region1.id,\n      octopusdeploy_kubernetes_cluster_deployment_target.test_eks.id,\n      octopusdeploy_listening_tentacle_deployment_target.listening.id,\n      octopusdeploy_offline_package_drop_deployment_target.target_offlineoffline.id,\n      octopusdeploy_polling_tentacle_deployment_target.polling.id,\n      octopusdeploy_ssh_connection_deployment_target.ssh.id\n    ]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = octopusdeploy_lifecycle.simple_lifecycle2.id\n  name                                 = "Test 2"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_static_worker_pool" "workerpool_docker" {{\n  name        = "Docker"\n  description = "A test worker pool"\n  is_default  = true\n  sort_order  = 3\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "deploy_backend" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.AwsRunCloudFormation"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      properties                         = {{ "Octopus.Action.Aws.AssumeRole" = "False", "Octopus.Action.Aws.CloudFormation.Tags" = "[{{\\"key\\":\\"Environment\\",\\"value\\":\\"#{{Octopus.Environment.Name | Replace \\\\\\" .*\\\\\\" \\\\\\"\\\\\\"}}\\"}},{{\\"key\\":\\"DeploymentProject\\",\\"value\\":\\"API_Gateway\\"}}]", "Octopus.Action.Aws.CloudFormationStackName" = "OctopusBuilder-APIGateway-mcasperson-#{{Octopus.Environment.Name | Replace \\" .*\\" \\"\\" | ToLower}}", "Octopus.Action.Aws.CloudFormationTemplate" = "Resources:\\n  RestApi:\\n    Type: \'AWS::ApiGateway::RestApi\'\\n    Properties:\\n      Description: $${{CFproperty}}\\n      Name: Octopus Workflow Builder\\n      BinaryMediaTypes:\\n        - \'*/*\'\\n      EndpointConfiguration:\\n        Types:\\n          - REGIONAL\\n  Health:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: health\\n  Api:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId:\\n        Ref: RestApi\\n      ParentId:\\n        \'Fn::GetAtt\':\\n          - RestApi\\n          - RootResourceId\\n      PathPart: api\\n  Web:\\n    Type: \'AWS::ApiGateway::Resource\'\\n    Properties:\\n      RestApiId: !Ref RestApi\\n      ParentId: !GetAtt\\n        - RestApi\\n        - RootResourceId\\n      PathPart: \'{{proxy+}}\'\\nOutputs:\\n  RestApi:\\n    Description: The REST API\\n    Value: !Ref RestApi\\n  RootResourceId:\\n    Description: ID of the resource exposing the root resource id\\n    Value:\\n      \'Fn::GetAtt\':\\n        - RestApi\\n        - RootResourceId\\n  Health:\\n    Description: ID of the resource exposing the health endpoints\\n    Value: !Ref Health\\n  Api:\\n    Description: ID of the resource exposing the api endpoint\\n    Value: !Ref Api\\n  Web:\\n    Description: ID of the resource exposing the web app frontend\\n    Value: !Ref Web\\n", "Octopus.Action.Aws.CloudFormationTemplateParameters" = "[]", "Octopus.Action.Aws.CloudFormationTemplateParametersRaw" = "[]", "Octopus.Action.Aws.Region" = "ap-southeast-2", "Octopus.Action.Aws.TemplateSource" = "Inline", "Octopus.Action.Aws.WaitForCompletion" = "True", "Octopus.Action.AwsAccount.UseInstanceRole" = "False", "Octopus.Action.AwsAccount.Variable" = "AWS Account" }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n      package {{\n        name                      = "test"\n        package_id                = "test"\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        acquisition_location      = "Server"\n        extract_during_deployment = true\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_azure_service_principal" "account_azure" {{\n  description                       = "Azure Account"\n  name                              = "Azure Account"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "2eb8bd13-661e-489c-beb9-4103efb9dbdd"\n  password                          = "secretgoeshere"\n  subscription_id                   = "95bf77d2-64b1-4ed2-9de1-b5451e3881f5"\n  tenant_id                         = "18eb006b-c3c8-4a72-93cd-fe4b293f82ee"\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  azure_service_principal_authentication {{\n    account_id             = octopusdeploy_azure_service_principal.account_azure.id\n    cluster_name           = "mycluster"\n    cluster_resource_group = "myresourcegroup"\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_gcp_account" "account_google" {{\n  description                       = "A test account"\n  name                              = "Google"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  json_key                          = "secretgoeshere"\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  gcp_account_authentication {{\n    account_id   = octopusdeploy_gcp_account.account_google.id\n    cluster_name = "mycluster"\n    project      = "myproject"\n    region       = "region"\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  authentication {{\n    account_id   = octopusdeploy_token_account.account_autopilot_service_account.id\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  token                             = "secretgoeshere"\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_k8s {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  certificate_authentication {{\n    client_certificate    = octopusdeploy_certificate.certificate_kind_ca.id\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_variablea" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.template[0].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "Override Variable A"\n  depends_on = [octopusdeploy_tenant_project.tenanta_project]\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_variableb" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.template[1].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "Override Variable B"\n  depends_on = [octopusdeploy_tenant_project.tenanta_project]\n}}\n\nresource "octopusdeploy_tenant_common_variable" "tenantcommonvariable1_secret" {{\n  library_variable_set_id = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.id}}"\n  template_id             = "${{octopusdeploy_library_variable_set.library_variable_set_variables_variableset.template[2].id}}"\n  tenant_id               = "${{octopusdeploy_tenant.tenant_team_a.id}}"\n  value                   = "Override Secret"\n  depends_on = [octopusdeploy_tenant_project.tenanta_project]\n}}\n\nresource "octopusdeploy_library_variable_set" "library_variable_set_variables_variableset" {{\n  name        = "VariableSet"\n  description = ""\n\n  template {{\n    name             = "VariableA"\n    label            = "This is a variable"\n    default_value    = "a"\n    help_text = "This is help text"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n  template {{\n    name             = "VariableB"\n    label            = "This is a variable"\n    default_value    = "b"\n    help_text = "This is help text"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n  template {{\n    name             = "secret"\n    label            = "This is a secret variable"\n    default_value    = "a secret"\n    help_text = "This is help text"\n    display_settings = {{ "Octopus.ControlType" = "Sensitive" }}\n  }}\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "helm" {{\n  feed_type    = "Helm"\n  ids          = []\n  partial_name = "Helm"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "docker" {{\n  feed_type    = "Docker"\n  ids          = []\n  partial_name = "Docker"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "github" {{\n  feed_type    = "GitHub"\n  ids          = []\n  partial_name = "GitHub"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "maven" {{\n  feed_type    = "Maven"\n  ids          = []\n  partial_name = "Maven"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "nuget" {{\n  feed_type    = "NuGet"\n  ids          = []\n  partial_name = "NuGet"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\ndata "octopusdeploy_library_variable_sets" "script_module" {{\n  partial_name = "Script Module"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = [data.octopusdeploy_library_variable_sets.script_module.library_variable_sets[0].id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.project_1.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = [octopusdeploy_script_module.library_variable_set_test2.id]\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\nresource "octopusdeploy_script_module" "library_variable_set_test2" {{\n  description = "Test script module"\n  name        = "Script Module"\n\n  script {{\n    body   = "echo \\"hi\\""\n    syntax = "PowerShell"\n  }}\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    tenant_tags = ["tag1/a"]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\ndata "octopusdeploy_deployment_targets" "cloud" {{\n  partial_name = "CloudRegion"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = "test"\n  scope {{\n    tenant_tags = ["tag1/a"]\n    machines = [data.octopusdeploy_deployment_targets.cloud.deployment_targets[0].id]\n  }}\n}}\n\noutput "octopus_project_1" {{\n  value = octopusdeploy_project.project_1.id\n}}\n\nresource "octopusdeploy_project" "project_2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project 2"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test 2"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project" "project2" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test2"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project1" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id =  octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project2" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.project2.id\n  tenant_id =  octopusdeploy_tenant.tenant_team_a.id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "project_1" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_variable" "scoped_var" {{\n  owner_id = octopusdeploy_project.project_1.id\n  type     = "String"\n  name     = "test"\n  value    = octopusdeploy_token_account.account_autopilot_service_account.id\n}}\n\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = []\n  depends_on = []\n}}\n\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = [octopusdeploy_tenant.tenant_team_a.id]\n  tenanted_deployment_participation = "Untenanted"\n  token                             = "secretgoeshere"\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n    // Use the option below when debugging\n    // octopusdeploy = {{ source = "octopus.com/com/octopusdeploy" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  cluster_certificate_path          = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n  }}\n\n  pod_authentication {{\n    token_path = "/var/run/secrets/kubernetes.io/serviceaccount/token"\n  }}\n}}\n\nresource "octopusdeploy_machine_policy" "machinepolicy_testing" {{\n  name                                               = "Testing"\n  description                                        = "test machine policy"\n  connection_connect_timeout                         = 60000000000\n  connection_retry_count_limit                       = 5\n  connection_retry_sleep_interval                    = 100000000\n  connection_retry_time_limit                        = 300000000000\n\n  machine_cleanup_policy {{\n    delete_machines_behavior         = "DeleteUnavailableMachines"\n    delete_machines_elapsed_timespan = 1200000000000\n  }}\n\n  machine_connectivity_policy {{\n    machine_connectivity_behavior = "ExpectedToBeOnline"\n  }}\n\n  machine_health_check_policy {{\n\n    bash_health_check_policy {{\n      run_type    = "Inline"\n      script_body = ""\n    }}\n\n    powershell_health_check_policy {{\n      run_type    = "Inline"\n      script_body = "$freeDiskSpaceThreshold = 5GB\\r\\n\\r\\nTry {{\\r\\n\\tGet-WmiObject win32_LogicalDisk -ErrorAction Stop  | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null)}} |  % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\r\\n}} Catch [System.Runtime.InteropServices.COMException] {{\\r\\n\\tGet-WmiObject win32_Volume | ? {{ ($_.DriveType -eq 3) -and ($_.FreeSpace -ne $null) -and ($_.DriveLetter -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DriveLetter; FreeSpace=$_.FreeSpace}} }}\\r\\n\\tGet-WmiObject Win32_MappedLogicalDisk | ? {{ ($_.FreeSpace -ne $null) -and ($_.DeviceId -ne $null)}} | % {{ CheckDriveCapacity @{{Name =$_.DeviceId; FreeSpace=$_.FreeSpace}} }}\\t\\r\\n}}"\n    }}\n\n    health_check_cron_timezone = "UTC"\n    health_check_interval      = 600000000000\n    health_check_type          = "RunScript"\n  }}\n\n  machine_update_policy {{\n    calamari_update_behavior = "UpdateOnDeployment"\n    tentacle_update_behavior = "NeverUpdate"\n    kubernetes_agent_update_behavior = "Update"\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n\n  template {{\n    name             = "Project Template Variable"\n    label            = "Test"\n    default_value    = "Test"\n    help_text = "help text goes here"\n    display_settings = {{ "Octopus.ControlType" = "Sensitive" }}\n  }}\n\n  template {{\n    name             = "Project Template Variable 2"\n    label            = "Test2"\n    default_value    = "Test2"\n    help_text = "help text goes here"\n    display_settings = {{ "Octopus.ControlType" = "SingleLineText" }}\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = []\n  tenanted_deployment_participation = "Untenanted"\n  tenants                           = []\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "tag1"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["tag1/a", "tag1/b"]\n  depends_on = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id, octopusdeploy_environment.production_environment.id]\n  project_id   = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id =  octopusdeploy_tenant.tenant_team_a.id\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = null\n  tenanted_deployment_participation = "Tenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nresource "octopusdeploy_azure_cloud_service_deployment_target" "target_azure" {{\n  environments                      = [octopusdeploy_environment.development_environment.id]\n  name                              = "Azure"\n  roles                             = ["cloud"]\n  account_id                        = octopusdeploy_azure_subscription_account.account_subscription.id\n  cloud_service_name                = "servicename"\n  storage_account_name              = "accountname"\n  default_worker_pool_id            = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  thumbprint                        = ""\n  use_current_instance_count        = true\n}}\n\nresource "octopusdeploy_azure_service_principal" "account_azure" {{\n  description                       = "Azure Account"\n  name                              = "Azure"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  application_id                    = "2eb8bd13-661e-489c-beb9-4103efb9dbdd"\n  password                          = "secretgoeshere"\n  subscription_id                   = "95bf77d2-64b1-4ed2-9de1-b5451e3881f5"\n  tenant_id                         = "18eb006b-c3c8-4a72-93cd-fe4b293f82ee"\n}}\n\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenants                           = null\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  storage_endpoint_suffix           = "storage_endpoint_suffix"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "management_endpoint"\n  certificate                       = file("dummycert2.txt")\n}}\n\nresource "octopusdeploy_certificate" "certificate_kind_ca" {{\n  name                              = "Test"\n  certificate_data                  = file("dummycert.txt")\n  password                          = "Password01!"\n  environments                      = []\n  notes                             = "A test certificate"\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  tenants                           = []\n  depends_on                        = [octopusdeploy_tag.tag_a]\n}}\n\n\nresource "octopusdeploy_cloud_region_deployment_target" "target_region1" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "cloud"\n  roles                             = ["cloud"]\n  default_worker_pool_id            = ""\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_gcp_account" "account_google" {{\n  description                       = "A test account"\n  name                              = "Google"\n  environments                      = null\n  tenants                           = null\n  json_key                          = "secretgoeshere"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n}}\n\ndata "octopusdeploy_machine_policies" "default_machine_policy" {{\n  ids          = null\n  partial_name = "Default Machine Policy"\n  skip         = 0\n  take         = 1\n}}\n\nresource octopusdeploy_kubernetes_cluster_deployment_target test_eks {{\n  cluster_url                       = "https://cluster"\n  environments                      = [octopusdeploy_environment.test_environment.id]\n  name                              = "Test"\n  roles                             = ["eks"]\n  cluster_certificate               = ""\n  cluster_certificate_path          = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  namespace                         = ""\n  skip_tls_verification             = true\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n  uri                               = ""\n\n  container {{\n    feed_id = ""\n    image   = ""\n  }}\n\n  endpoint {{\n    communication_style    = "Kubernetes"\n  }}\n\n  pod_authentication {{\n    token_path = "/var/run/secrets/kubernetes.io/serviceaccount/token"\n  }}\n}}\n\nresource "octopusdeploy_listening_tentacle_deployment_target" "target_vm_listening_ngrok" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "listening"\n  roles                             = ["vm"]\n  tentacle_url                      = "https://tentacle/"\n  thumbprint                        = "55E05FD1B0F76E60F6DA103988056CE695685FD1"\n  is_disabled                       = false\n  is_in_process                     = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n}}\n\n\nresource "octopusdeploy_offline_package_drop_deployment_target" "target_offline" {{\n  applications_directory            = "c:\\\\temp"\n  working_directory                 = "c:\\\\temp"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "offline"\n  roles                             = ["offline"]\n  health_status                     = "Healthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n}}\n\nresource "octopusdeploy_polling_tentacle_deployment_target" "target_desktop_3e4k4r8" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "polling"\n  roles                             = ["vm"]\n  tentacle_url                      = "poll://abcdefghijklmnopqrst/"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "PowerShell"\n  shell_version                     = "5.1.22621.1"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n\n  tentacle_version_details {{\n  }}\n\n  thumbprint = "1854A302E5D9EAC1CAA3DA1F5249F82C28BB2B86"\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_worker_pools" "workerpool_default" {{\n  name = "Default Worker Pool"\n  ids  = null\n  skip = 0\n  take = 1\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Tenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  depends_on = [octopusdeploy_tag.tag_a]\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = data.octopusdeploy_worker_pools.workerpool_default.worker_pools[0].id\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody"              = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling"                      = "False"\n        "Octopus.Action.Script.ScriptSource"            = "Inline"\n        "Octopus.Action.Script.Syntax"                  = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = ["type with space/a with space"]\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\nresource "octopusdeploy_azure_service_fabric_cluster_deployment_target" "target_service_fabric" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Service Fabric"\n  roles                             = ["cloud"]\n  connection_endpoint               = "http://endpoint"\n  aad_client_credential_secret      = ""\n  aad_credential_type               = "UserCredential"\n  aad_user_credential_password      = "${{var.target_service_fabric}}"\n  aad_user_credential_username      = "username"\n  certificate_store_location        = ""\n  certificate_store_name            = ""\n  client_certificate_variable       = ""\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n}}\nvariable "target_service_fabric" {{\n  type        = string\n  nullable    = true\n  sensitive   = true\n  description = "The secret variable value associated with the target \\"Service Fabric\\""\n}}\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_ssh_key_account" "account_ec2_sydney" {{\n  name                              = "ec2 sydney"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "${{var.account_ec2_sydney_cert}}"\n  username                          = "ec2-user"\n  private_key_passphrase            = "${{var.account_ec2_sydney}}"\n}}\nvariable "account_ec2_sydney" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The password associated with the certificate for account ec2 sydney"\n}}\nvariable "account_ec2_sydney_cert" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The certificate file for account ec2 sydney"\n}}\n\nresource "octopusdeploy_ssh_connection_deployment_target" "target_3_25_215_87" {{\n  account_id                        = "${{octopusdeploy_ssh_key_account.account_ec2_sydney.id}}"\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  fingerprint                       = "d5:6b:a3:78:fa:fe:f5:ad:d4:79:4a:57:35:6a:32:ef"\n  host                              = "3.25.215.87"\n  name                              = "sshtarget"\n  roles                             = ["vm"]\n  dot_net_core_platform             = "linux-x64"\n  machine_policy_id                 = data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n}}\n\nresource "octopusdeploy_ssh_key_account" "account_ssh" {{\n  description                       = "A test account"\n  name                              = "SSH"\n  environments                      = null\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = null\n  private_key_file                  = "unused"\n  username                          = "admin"\n  # Because of https://github.com/OctopusDeployLabs/terraform-provider-octopusdeploy/issues/343\n  private_key_passphrase            = file("dummycert3.txt")\n}}\n\nresource "octopusdeploy_tag_set" "tagset_tag1" {{\n  name        = "type with space"\n  description = "Test tagset"\n  sort_order  = 0\n}}\n\nresource "octopusdeploy_tag" "tag_a" {{\n  name        = "a with space"\n  color       = "#333333"\n  description = "tag a"\n  sort_order  = 2\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_b" {{\n  name        = "b"\n  color       = "#333333"\n  description = "tag b"\n  sort_order  = 3\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_excluded" {{\n  name        = "excluded"\n  color       = "#333333"\n  description = "excluded"\n  sort_order  = 4\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tag" "tag_ignore" {{\n  name        = "ignorethis"\n  color       = "#333333"\n  description = "ignore this"\n  sort_order  = 5\n  tag_set_id = octopusdeploy_tag_set.tagset_tag1.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_team_a" {{\n  name        = "Team A"\n  description = "Test tenant"\n  tenant_tags = ["type with space/a with space", "type with space/b", "type with space/ignorethis"]\n  depends_on  = [octopusdeploy_tag.tag_a, octopusdeploy_tag.tag_b, octopusdeploy_tag.tag_ignore]\n}}\n\nresource "octopusdeploy_tenant_project" "tenanta_project" {{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_team_a.id\n}}\n\nresource "octopusdeploy_tenant" "tenant_excluded" {{\n  name        = "Excluded"\n  description = "Excluded tenant"\n  tenant_tags = ["type with space/excluded"]\n  depends_on  = [octopusdeploy_tag.tag_excluded]\n}}\n\nresource "octopusdeploy_tenant_project" "tenantexcluded_project" {{\n  environment_ids = [\n    octopusdeploy_environment.test_environment.id,\n    octopusdeploy_environment.development_environment.id,\n    octopusdeploy_environment.production_environment.id\n  ]\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  tenant_id = octopusdeploy_tenant.tenant_excluded.id\n}}\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenants                           = null\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  token                             = "secretgoeshere"\n}}\n\nresource "octopusdeploy_username_password_account" "account_gke" {{\n  description                       = "A test account"\n  name                              = "UsernamePasswordAccount"\n  environments                      = null\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenanted_deployment_participation = "Tenanted"\n  tenants                           = null\n  username                          = "admin"\n  password                          = "secretgoeshere"\n}}\n\nresource "octopusdeploy_azure_web_app_deployment_target" "target_web_app" {{\n  environments                      = ["${{octopusdeploy_environment.development_environment.id}}"]\n  name                              = "Web App"\n  roles                             = ["cloud"]\n  account_id                        = "${{octopusdeploy_azure_service_principal.account_sales_account.id}}"\n  resource_group_name               = "mattc-webapp"\n  web_app_name                      = "mattc-webapp"\n  health_status                     = "Unhealthy"\n  is_disabled                       = false\n  machine_policy_id                 = "${{data.octopusdeploy_machine_policies.default_machine_policy.machine_policies[0].id}}"\n  shell_name                        = "Unknown"\n  shell_version                     = "Unknown"\n  tenanted_deployment_participation = "Tenanted"\n  depends_on                        = [octopusdeploy_tag.tag_a]\n  tenant_tags                       = ["type with space/a with space"]\n  tenants                           = []\n  thumbprint                        = ""\n  web_app_slot_name                 = "slot1"\n# This doesn\'t work for setting the worker pool\n#  endpoint {{\n#    communication_style    = "AzureWebApp"\n#    default_worker_pool_id = octopusdeploy_static_worker_pool.workerpool_docker.id\n#  }}\n\n}}\nresource "octopusdeploy_azure_service_principal" "account_sales_account" {{\n  name                              = "Sales Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "08a4a027-6f2a-4793-a0e5-e59a3c79189f"\n  password                          = "${{var.account_sales_account}}"\n  subscription_id                   = "3b50dcf4-f74d-442e-93cb-301b13e1e2d5"\n  tenant_id                         = "3d13e379-e666-469e-ac38-ec6fd61c1166"\n}}\nvariable "account_sales_account" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The Azure secret associated with the account Sales Account"\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_aws_account" "account_aws_account" {{\n  name                              = "AWS Account"\n  description                       = ""\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  access_key                        = "ABCDEFGHIJKLMNOPQRST"\n  secret_key                        = "secretgoeshere"\n}}\n\n\nresource "octopusdeploy_azure_service_principal" "account_azure" {{\n  description                       = "Azure Account"\n  name                              = "Azure"\n  environments                      = []\n  tenants                           = []\n  tenanted_deployment_participation = "Untenanted"\n  application_id                    = "2eb8bd13-661e-489c-beb9-4103efb9dbdd"\n  password                          = "secretgoeshere"\n  subscription_id                   = "95bf77d2-64b1-4ed2-9de1-b5451e3881f5"\n  tenant_id                         = "18eb006b-c3c8-4a72-93cd-fe4b293f82ee"\n}}\n\nresource "octopusdeploy_azure_subscription_account" "account_subscription" {{\n  description                       = "A test account"\n  name                              = "Subscription"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  storage_endpoint_suffix           = "storage_endpoint_suffix"\n  subscription_id                   = "fde6a0ae-a1d4-40ae-91de-88f4ed898c03"\n  azure_environment                 = "AzureCloud"\n  management_endpoint               = "management_endpoint"\n  certificate                       = file("dummycert.txt")\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n  username                             = "user"\n  password                             = "password"\n}}\n\n\nresource "octopusdeploy_gcp_account" "account_google" {{\n  description                       = "A test account"\n  name                              = "Google"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  json_key                          = "secretgoeshere"\n}}\n\nresource "octopusdeploy_git_credential" "gitcredential_test" {{\n  description = "test git credential"\n  name        = "test"\n  type        = "UsernamePassword"\n  username    = "admin"\n  password    = "${{var.gitcredential_test}}"\n}}\nvariable "gitcredential_test" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret variable value associated with the git credential test"\n  default     = "Password01!"\n}}\n\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Default Project Group"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "secret" {{\n  name = "Test.SecretVariable"\n  type = "Sensitive"\n  description = "Test variable"\n  is_sensitive = true\n  is_editable = true\n  owner_id = octopusdeploy_project.deploy_frontend_project.id\n  sensitive_value = "Test"\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = octopusdeploy_docker_container_registry.feed_docker.id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_ssh_key_account" "account_ssh" {{\n  description                       = "A test account"\n  name                              = "SSH"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  private_key_file                  = "unused"\n  username                          = "admin"\n  # Because of https://github.com/OctopusDeployLabs/terraform-provider-octopusdeploy/issues/343\n  private_key_passphrase            = file("dummycert2.txt")\n}}\n\nresource "octopusdeploy_token_account" "account_autopilot_service_account" {{\n  description                       = "A test account"\n  name                              = "Token"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  token                             = "secretgoeshere"\n}}\n\nresource "octopusdeploy_username_password_account" "account_gke" {{\n  description                       = "A test account"\n  name                              = "UserPass"\n  environments                      = null\n  tenant_tags                       = []\n  tenants                           = null\n  tenanted_deployment_participation = "Untenanted"\n  username                          = "admin"\n  password                          = "secretgoeshere"\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_projects" "example" {{\n  partial_name           = "Test"\n  skip                   = 0\n  take                   = 1\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = data.octopusdeploy_projects.example.projects[0].id\n  name               = "Runbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook.id\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  count = 100\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project ${{count.index + 1}}"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test ${{count.index + 1}}"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project[count.index].id\n  count = 100\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = octopusdeploy_docker_container_registry.feed_docker.id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.18.1" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "workerpool_variable" {{\n  owner_id = octopusdeploy_project.deploy_frontend_project.id\n  type     = "String"\n  name     = "WorkerPool"\n  value    = octopusdeploy_static_worker_pool.static_pool.id\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = "#{{WorkerPool}}"\n      properties = {{\n        "Octopus.Action.Script.ScriptBody"              = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling"                      = "False"\n        "Octopus.Action.Script.ScriptSource"            = "Inline"\n        "Octopus.Action.Script.Syntax"                  = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = octopusdeploy_docker_container_registry.feed_docker.id\n        properties = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.deploy_frontend_project.id\n  name               = "Runbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = []\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook.id\n\n\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      worker_pool_variable               = "#{{WorkerPool}}"\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = ["Octopus.Features.JsonConfigurationVariables"]\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n\nresource "octopusdeploy_static_worker_pool" "static_pool" {{\n  description = "A worker pool"\n  is_default  = true\n  name        = "Static pool"\n  sort_order  = 5\n}}\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.18.3" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n\n  jira_extension_settings {{\n    environment_type = "unmapped"\n  }}\n\n  jira_service_management_extension_settings {{\n    is_enabled = true\n  }}\n\n  servicenow_extension_settings {{\n    is_enabled = true\n  }}\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.deploy_frontend_project.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = octopusdeploy_docker_container_registry.feed_docker.id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.deploy_frontend_project.id\n  name               = "Runbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = [octopusdeploy_environment.development_environment.id]\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook.id\n\n\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = [octopusdeploy_environment.development_environment.id]\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = ["Octopus.Features.JsonConfigurationVariables"]\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nresource "octopusdeploy_project_scheduled_trigger" "once_daily_example" {{\n  name        = "Once Daily example"\n  description = "This is a once daily schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = octopusdeploy_environment.test_environment.id\n  }}\n  once_daily_schedule {{\n    start_time   = "2024-03-22T09:00:00"\n    days_of_week = ["Tuesday", "Wednesday", "Monday"]\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "continuous_example" {{\n  name        = "Continuous"\n  description = "This is a continuous daily schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = octopusdeploy_environment.test_environment.id\n  }}\n  continuous_daily_schedule {{\n    interval      = "OnceHourly"\n    hour_interval = 3\n    run_after     = "2024-03-22T09:00:00"\n    run_until     = "2024-03-29T13:00:00"\n    days_of_week  = ["Monday", "Tuesday", "Friday"]\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "deploy_latest_example" {{\n  name       = "Deploy Latest"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_latest_release_action {{\n    source_environment_id      = octopusdeploy_environment.development_environment.id\n    destination_environment_id = octopusdeploy_environment.test_environment.id\n    should_redeploy            = true\n  }}\n  cron_expression_schedule {{\n    cron_expression = "0 0 06 * * Mon-Fri"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "deploy_new_example" {{\n  name       = "Deploy New"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = octopusdeploy_environment.test_environment.id\n  }}\n  cron_expression_schedule {{\n    cron_expression = "0 0 06 * * Mon-Fri"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "date_of_month" {{\n  name       = "Date Of Month"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = octopusdeploy_environment.test_environment.id\n  }}\n  days_per_month_schedule {{\n    monthly_schedule_type  = "DateOfMonth"\n    start_time = "2024-03-22T09:00:00"\n    date_of_month = "1"\n    day_number_of_month = "1"\n    day_of_week = "Monday"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "day_of_month" {{\n  name       = "Day Of Month"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = octopusdeploy_environment.test_environment.id\n  }}\n  days_per_month_schedule {{\n    monthly_schedule_type  = "DayOfMonth"\n    start_time = "2024-03-22T09:00:00"\n    date_of_month = "1"\n    day_number_of_month = "1"\n    day_of_week = "Monday"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "runbook_example" {{\n  name        = "Runbook"\n  description = "This is a Cron schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  run_runbook_action {{\n    target_environment_ids = [octopusdeploy_environment.test_environment.id, octopusdeploy_environment.development_environment.id]\n    runbook_id             = octopusdeploy_runbook.runbook.id\n  }}\n  cron_expression_schedule {{\n    cron_expression = "0 0 06 * * Mon-Fri"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "timezone_example" {{\n  name        = "Time Zone Example"\n  description = "This is a continuous daily schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  timezone = "E. Australia Standard Time"\n  deploy_new_release_action {{\n    destination_environment_id = octopusdeploy_environment.test_environment.id\n  }}\n  continuous_daily_schedule {{\n    interval      = "OnceHourly"\n    hour_interval = 3\n    run_after     = "2024-03-22T09:00:00"\n    run_until     = "2024-03-29T13:00:00"\n    days_of_week  = ["Monday", "Tuesday", "Friday"]\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.18.3" }}\n  }}\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.deploy_frontend_project.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\ndata "octopusdeploy_project_groups" "project_group" {{\n  ids          = null\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "docker_feed" {{\n  feed_type    = "Docker"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = data.octopusdeploy_project_groups.project_group.project_groups[0].id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Get MySQL Host"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "Get MySQL Host"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.docker_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.deploy_frontend_project.id\n  name               = "Runbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = [data.octopusdeploy_environments.dev.environments[0].id]\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook.id\n\n\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = [data.octopusdeploy_environments.dev.environments[0].id]\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = ["Octopus.Features.JsonConfigurationVariables"]\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\ndata "octopusdeploy_environments" "test" {{\n  ids          = []\n  partial_name = "Test"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_environments" "dev" {{\n  ids          = []\n  partial_name = "Development"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "once_daily_example" {{\n  name        = "Once Daily example"\n  description = "This is a once daily schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = data.octopusdeploy_environments.test.environments[0].id\n  }}\n  once_daily_schedule {{\n    start_time   = "2024-03-22T09:00:00"\n    days_of_week = ["Tuesday", "Wednesday", "Monday"]\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "continuous_example" {{\n  name        = "Continuous"\n  description = "This is a continuous daily schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = data.octopusdeploy_environments.test.environments[0].id\n  }}\n  continuous_daily_schedule {{\n    interval      = "OnceHourly"\n    hour_interval = 3\n    run_after     = "2024-03-22T09:00:00"\n    run_until     = "2024-03-29T13:00:00"\n    days_of_week  = ["Monday", "Tuesday", "Friday"]\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "deploy_latest_example" {{\n  name       = "Deploy Latest"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_latest_release_action {{\n    source_environment_id      = data.octopusdeploy_environments.dev.environments[0].id\n    destination_environment_id = data.octopusdeploy_environments.test.environments[0].id\n    should_redeploy            = true\n  }}\n  cron_expression_schedule {{\n    cron_expression = "0 0 06 * * Mon-Fri"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "deploy_new_example" {{\n  name       = "Deploy New"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = data.octopusdeploy_environments.test.environments[0].id\n  }}\n  cron_expression_schedule {{\n    cron_expression = "0 0 06 * * Mon-Fri"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "date_of_month" {{\n  name       = "Date Of Month"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = data.octopusdeploy_environments.test.environments[0].id\n  }}\n  days_per_month_schedule {{\n    monthly_schedule_type  = "DateOfMonth"\n    start_time = "2024-03-22T09:00:00"\n    date_of_month = "1"\n    day_number_of_month = "1"\n    day_of_week = "Monday"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "day_of_month" {{\n  name       = "Day Of Month"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  deploy_new_release_action {{\n    destination_environment_id = data.octopusdeploy_environments.test.environments[0].id\n  }}\n  days_per_month_schedule {{\n    monthly_schedule_type  = "DayOfMonth"\n    start_time = "2024-03-22T09:00:00"\n    date_of_month = "1"\n    day_number_of_month = "1"\n    day_of_week = "Monday"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "runbook_example" {{\n  name        = "Runbook"\n  description = "This is a Cron schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  run_runbook_action {{\n    target_environment_ids = [data.octopusdeploy_environments.test.environments[0].id, data.octopusdeploy_environments.dev.environments[0].id]\n    runbook_id             = octopusdeploy_runbook.runbook.id\n  }}\n  cron_expression_schedule {{\n    cron_expression = "0 0 06 * * Mon-Fri"\n  }}\n}}\n\nresource "octopusdeploy_project_scheduled_trigger" "timezone_example" {{\n  name        = "Time Zone Example"\n  description = "This is a continuous daily schedule"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  space_id = var.octopus_space_id\n  timezone = "E. Australia Standard Time"\n  deploy_new_release_action {{\n    destination_environment_id = data.octopusdeploy_environments.test.environments[0].id\n  }}\n  continuous_daily_schedule {{\n    interval      = "OnceHourly"\n    hour_interval = 3\n    run_after     = "2024-03-22T09:00:00"\n    run_until     = "2024-03-29T13:00:00"\n    days_of_week  = ["Monday", "Tuesday", "Friday"]\n  }}\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nresource "octopusdeploy_channel" "backend_mainline" {{\n  name        = "Test"\n  project_id  = octopusdeploy_project.deploy_frontend_project.id\n  description = "Test channel"\n  depends_on  = [octopusdeploy_project.deploy_frontend_project, octopusdeploy_deployment_process.test]\n  is_default  = true\n}}\n\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_docker_container_registry" "feed_docker" {{\n  name                                 = "Docker"\n  password                             = "password"\n  username                             = "username"\n  api_version                          = "v1"\n  feed_uri                             = "https://index.docker.io"\n  package_acquisition_location_options = ["ExecutionTarget", "NotAcquired"]\n}}\n\n\nresource "octopusdeploy_environment" "development_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Development"\n  use_guided_failure           = false\n\n  jira_extension_settings {{\n    environment_type = "unmapped"\n  }}\n\n  jira_service_management_extension_settings {{\n    is_enabled = true\n  }}\n\n  servicenow_extension_settings {{\n    is_enabled = true\n  }}\n}}\n\nresource "octopusdeploy_environment" "test_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Test"\n  use_guided_failure           = false\n}}\n\nresource "octopusdeploy_environment" "production_environment" {{\n  allow_dynamic_infrastructure = true\n  description                  = "A test environment"\n  name                         = "Production"\n  use_guided_failure           = false\n}}\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\ndata "octopusdeploy_feeds" "built_in_feed" {{\n  feed_type    = "BuiltIn"\n  ids          = null\n  partial_name = ""\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.deploy_frontend_project.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "step1"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.KubernetesRunScript"\n      name                               = "step1"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = true\n      is_required                        = false\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptBody" = "echo \\"hi\\""\n        "Octopus.Action.KubernetesContainers.Namespace" = ""\n        "OctopusUseBundledTooling" = "False"\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.Syntax" = "Bash"\n      }}\n\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = octopusdeploy_docker_container_registry.feed_docker.id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n\n      features = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["eks"]\n  }}\n}}\n\nresource "octopusdeploy_runbook" "runbook" {{\n  project_id         = octopusdeploy_project.deploy_frontend_project.id\n  name               = "Runbook"\n  description        = "Test Runbook"\n  multi_tenancy_mode = "Untenanted"\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n  retention_policy {{\n    quantity_to_keep = 10\n  }}\n  environment_scope           = "Specified"\n  environments                = [octopusdeploy_environment.development_environment.id]\n  default_guided_failure_mode = "EnvironmentDefault"\n  force_package_download      = false\n}}\n\nresource "octopusdeploy_runbook_process" "runbook" {{\n  runbook_id = octopusdeploy_runbook.runbook.id\n\n\n\n  step {{\n    condition           = "Success"\n    name                = "Hello world (using PowerShell)"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.Script"\n      name                               = "Hello world (using PowerShell)"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = true\n      worker_pool_id                     = ""\n      properties                         = {{\n        "Octopus.Action.Script.ScriptSource" = "Inline"\n        "Octopus.Action.Script.ScriptBody"   = "Write-Host \'Hello world, using PowerShell\'\\n\\n#TODO: Experiment with steps of your own :)\\n\\nWrite-Host \'[Learn more about the types of steps available in Octopus](https://oc.to/OnboardingAddStepsLearnMore)\'"\n        "Octopus.Action.Script.Syntax"       = "PowerShell"\n      }}\n      environments          = [octopusdeploy_environment.development_environment.id]\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = ["Octopus.Features.JsonConfigurationVariables"]\n\n      package {{\n        name                      = "package1"\n        package_id                = "package1"\n        acquisition_location      = "Server"\n        extract_during_deployment = false\n        feed_id                   = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties                = {{ Extract = "True", Purpose = "", SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n\n  step {{\n    condition           = "Success"\n    name                = "Test"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.TerraformApply"\n      name                               = "Test"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_id                     = ""\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Terraform.PlanJsonOutput"               = "False"\n        "Octopus.Action.Terraform.TemplateDirectory"            = "blah"\n        "Octopus.Action.Terraform.ManagedAccount"               = "None"\n        "Octopus.Action.Terraform.GoogleCloudAccount"           = "False"\n        "Octopus.Action.Script.ScriptSource"                    = "Package"\n        "Octopus.Action.GoogleCloud.UseVMServiceAccount"        = "True"\n        "Octopus.Action.Terraform.AzureAccount"                 = "False"\n        "Octopus.Action.Package.DownloadOnTentacle"             = "False"\n        "Octopus.Action.Terraform.RunAutomaticFileSubstitution" = "True"\n        "Octopus.Action.GoogleCloud.ImpersonateServiceAccount"  = "False"\n        "Octopus.Action.Terraform.AllowPluginDownloads"         = "True"\n      }}\n      environments          = []\n      excluded_environments = []\n      channels              = []\n      tenant_tags           = []\n      features              = []\n\n      primary_package {{\n        package_id           = "terraform"\n        acquisition_location = "Server"\n        feed_id              = data.octopusdeploy_feeds.built_in_feed.feeds[0].id\n        properties           = {{ SelectionMode = "immediate" }}\n      }}\n    }}\n\n    properties   = {{}}\n    target_roles = []\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nresource "octopusdeploy_external_feed_create_release_trigger" "my_trigger" {{\n  name       = "My feed trigger"\n  space_id   = var.octopus_space_id\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n  channel_id = octopusdeploy_channel.backend_mainline.id\n  package {{\n    deployment_action_slug = "step1"\n    package_reference      = "package1"\n  }}\n  depends_on = [octopusdeploy_deployment_process.test]\n}}\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
        (
            "system",
            'HCL: ###\nterraform {{\n  required_providers {{\n    octopusdeploy = {{ source = "OctopusDeployLabs/octopusdeploy", version = "0.30.5" }}\n  }}\n}}\n\n\nresource "octopusdeploy_git_credential" "gitcredential_test" {{\n  description = "test git credential"\n  name        = "test"\n  type        = "UsernamePassword"\n  username    = "admin"\n  password    = "${{var.gitcredential_test}}"\n}}\nvariable "gitcredential_test" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The secret variable value associated with the git credential test"\n  default     = "Password01!"\n}}\n\n\ndata "octopusdeploy_lifecycles" "lifecycle_default_lifecycle" {{\n  ids          = null\n  partial_name = "Default Lifecycle"\n  skip         = 0\n  take         = 1\n}}\n\nresource "octopusdeploy_variable" "string_variable" {{\n  owner_id  = octopusdeploy_project.deploy_frontend_project.id\n  type      = "String"\n  name      = "Test"\n  value     = "PlainText"\n}}\n\nresource "octopusdeploy_project" "deploy_frontend_project" {{\n  auto_create_release                  = false\n  default_guided_failure_mode          = "EnvironmentDefault"\n  default_to_skip_if_already_installed = false\n  description                          = "Test project"\n  discrete_channel_release             = false\n  is_disabled                          = false\n  is_discrete_channel_release          = false\n  is_version_controlled                = false\n  lifecycle_id                         = data.octopusdeploy_lifecycles.lifecycle_default_lifecycle.lifecycles[0].id\n  name                                 = "Test"\n  project_group_id                     = octopusdeploy_project_group.project_group_test.id\n  tenanted_deployment_participation    = "Untenanted"\n  space_id                             = var.octopus_space_id\n  included_library_variable_sets       = []\n  versioning_strategy {{\n    template = "#{{Octopus.Version.LastMajor}}.#{{Octopus.Version.LastMinor}}.#{{Octopus.Version.LastPatch}}.#{{Octopus.Version.NextRevision}}"\n  }}\n\n  connectivity_policy {{\n    allow_deployments_to_no_targets = false\n    exclude_unhealthy_targets       = false\n    skip_machine_behavior           = "SkipUnavailableMachines"\n  }}\n}}\n\nresource "octopusdeploy_deployment_process" "test" {{\n  project_id = octopusdeploy_project.deploy_frontend_project.id\n\n  step {{\n    condition           = "Success"\n    name                = "Deploy a Helm Chart"\n    package_requirement = "LetOctopusDecide"\n    start_trigger       = "StartAfterPrevious"\n\n    action {{\n      action_type                        = "Octopus.HelmChartUpgrade"\n      name                               = "Deploy a Helm Chart"\n      condition                          = "Success"\n      run_on_server                      = true\n      is_disabled                        = false\n      can_be_used_for_project_versioning = false\n      is_required                        = false\n      worker_pool_variable               = ""\n      properties                         = {{\n        "Octopus.Action.Helm.ResetValues" = "True"\n        "Octopus.Action.Helm.ClientVersion" = "V3"\n        "Octopus.Action.Script.ScriptSource" = "GitRepository"\n        "Octopus.Action.GitRepository.Source" = "External"\n        "Octopus.Action.Helm.ReleaseName" = "aaa"\n      }}\n      git_dependency {{\n        repository_uri = \t"https://github.com/OctopusDeploy/OctopusClients.git"\n        git_credential_type = "Library"\n        git_credential_id = octopusdeploy_git_credential.gitcredential_test.id\n        default_branch = "main"\n      }}\n      environments                       = []\n      excluded_environments              = []\n      channels                           = []\n      tenant_tags                        = []\n      features                           = []\n    }}\n\n    properties   = {{}}\n    target_roles = ["k8s"]\n  }}\n}}\n\nresource "octopusdeploy_project_group" "project_group_test" {{\n  name        = "Test"\n  description = "Test Description"\n}}\n\n\nprovider "octopusdeploy" {{\n  address  = "${{var.octopus_server}}"\n  api_key  = "${{var.octopus_apikey}}"\n  space_id = "${{var.octopus_space_id}}"\n}}\n\n\nvariable "octopus_server" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The URL of the Octopus server e.g. https://myinstance.octopus.app."\n}}\nvariable "octopus_apikey" {{\n  type        = string\n  nullable    = false\n  sensitive   = true\n  description = "The API key used to access the Octopus server. See https://octopus.com/docs/octopus-rest-api/how-to-create-an-api-key for details on creating an API key."\n}}\nvariable "octopus_space_id" {{\n  type        = string\n  nullable    = false\n  sensitive   = false\n  description = "The space ID to populate"\n}}\n\n\noutput "octopus_space_id" {{\n  value = var.octopus_space_id\n}}\n\n###',
        ),
    ]


async def get_all_file_content(tests, github_token, logging=None):
    contents_results = await asyncio.gather(
        *[get_file_content(test["name"], github_token, logging) for test in tests]
    )
    return [
        content
        for content in contents_results
        if content and not isinstance(content, Exception)
    ]


async def get_file_content(name, github_token, logging=None):
    try:
        test_files = await get_repo_contents(
            "OctopusSolutionsEngineering",
            "OctopusTerraformExport",
            "test/terraform/" + name + "/space_population",
            github_token,
        )
        test_files_contents = await asyncio.gather(
            *[
                get_repo_contents(
                    "OctopusSolutionsEngineering",
                    "OctopusTerraformExport",
                    "test/terraform/" + name + "/space_population/" + test_file["name"],
                    github_token,
                )
                for test_file in test_files
                if test_file["name"].endswith(".tf")
            ],
            return_exceptions=True
        )

        contents = [
            decode_string_b64(test_file_content["content"])
            for test_file_content in test_files_contents
            if not isinstance(test_files_contents, Exception)
        ]

        return (
            "system",
            "HCL: ###\n"
            + "\n\n".join(contents).replace("{", "{{").replace("}", "}}")
            + "\n###",
        )
    except Exception as e:
        # Sometimes the directory structure might not match the assumptions, or the decode function
        # fails. We want to silently ignore these errors and continue with the next file.
        if logging:
            logging("Error:", str(e))
        return None
